% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_aipw.R
\name{fit_aipw}
\alias{fit_aipw}
\title{Fit Augmented Inverse Probability Weighting}
\usage{
fit_aipw(
  X,
  Y,
  Zx,
  Zy,
  Ofam = gaussian(),
  treatment.effect = "ATE",
  weights = rep(1, N)
)
}
\arguments{
\item{X}{numeric vector of (0,1) specifiying the treatment variable.}

\item{Y}{numeric vector sepcifying the outcome variable}

\item{Zx}{design matrix for the exposure (propensity score) model.}

\item{Zy}{design matrix for the outcome model to be fitted to each treatment subgroup.}

\item{Ofam}{family function for the outcome model. See \link[stats]{family} for details of family functions.}

\item{treatment.effect}{the treament effect estimand of interest. 
Can be either \code{"ATE","ATT","ATC"} or \code{"All"} to fit all three.}

\item{weights}{an optional numeric vector of ‘observation weights’ to be used in the fitting process.}
}
\value{
List of fit parameters, which is used to derive an object of class \code{teffects} when called by \link[teffectsR]{teffects}.
}
\description{
Fitting function called by \link[teffectsR]{teffects} when the method is set to \code{'AIPW'}.
Augmented Inverse Probability Weighting combines the IPW method and the RA method. 
A (binomial \link[stats]{glm}) exposure model is fitted which provides observation weights.
Also a (\link[stats]{glm}) outcome model is fitted to each treatment subgroup, and used to predict potential outcomes.
}
\examples{
#generate some data
N = 50
X = rnorm(N)              #confounder
A = rbinom(N,1,plogis(X)) #treatment variable
Y = X+0.5*A               #continuous outcome
Z = rbinom(N,1,plogis(Y)) #binary outcome
df = data.frame(X=X,A=A,Y=Y,Z=Z)

teffect(A~X,Y~X,data=df,method="AIPW")
teffect(A~X,Z~X,data=df,outcome.family="binomial",method="AIPW")
}
