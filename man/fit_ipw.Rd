% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_ipw.R
\name{fit_ipw}
\alias{fit_ipw}
\title{Fit Inverse Probability Weighting}
\usage{
fit_ipw(X, Y, Zx, weights = rep(1, N))
}
\arguments{
\item{X}{numeric vector of (0,1) specifiying the treatment variable.}

\item{Y}{numeric vector sepcifying the outcome variable}

\item{Zx}{design matrix for the exposure (propensity score) model.}

\item{weights}{an optional numeric vector of ‘observation weights’ to be used in the fitting process.}
}
\value{
List of fit parameters, which is used to derive an object of class \code{teffects} when called by \link[teffectsR]{teffects}.
}
\description{
Fitting function called by \link[teffectsR]{teffects} when the method is set to \code{'IPW'}.
Inverse Probability Weighting fits a (binomial \link[stats]{glm}) model for the exposure (propensity score model).
Predictions from this model are used to weight the observations and derive potential outcome means.
This implementation normalizes the propesnity score weights.
This is sometimes called the "sample bounded" IPW estimator.
}
\examples{
#generate some data
N = 50
X = rnorm(N)              #confounder
A = rbinom(N,1,plogis(X)) #treatment variable
Y = X+0.5*A               #continuous outcome
Z = rbinom(N,1,plogis(Y)) #binary outcome
df = data.frame(X=X,A=A,Y=Y,Z=Z)

teffect(A~X,Y~1,data=df,method="IPW")
teffect(A~X,Z~1,data=df,method="IPW")

}
